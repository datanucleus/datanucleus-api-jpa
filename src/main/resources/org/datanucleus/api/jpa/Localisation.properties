################################################################################
# Copyright (c) 2006 Andy Jefferson and others. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# Contributors:
#     ...
#
# Resources for org.datanucleus.api.jpa package
################################################################################

#
# EntityManagerFactory
#
EMF.NotProviderForPersistenceUnit=DataNucleus is not a valid provider for the specified persistence-unit "{0}". Please check the provider specified for that persistence-unit
EMF.NoPersistenceXML=No META-INF/persistence.xml files were found in the CLASSPATH of the current thread!
EMF.PersistenceUnitNotFound=No persistence unit of name "{0}" is found in the CLASSPATH of the current thread!
EMF.RegisterClassesWithStore=Registering persistence-unit classes with the StoreManager
EMF.ContainerJTAWithNoNonJTADataSource=Container-Managed EMF with JTA data-source but no \"non-jta-datasource\" specified! This can cause problems if you require any schema creation and/or sequence usage (see also "datanucleus.valuegeneration.transactionAttribute"). All schema and sequence operations ought to be on a non-jta-datasource
EMF.ContainerLocalWithJTADataSource=Container-Managed EMF specified as using RESOURCE_LOCAL transaction yet the data source is specified as JTA! Report this

#
# EntityManager
#
EM.TransactionLocal=EntityManager is using local transaction. JTA transaction not available
EM.TransactionNotLocal=EntityManager is using JTA transactions. Transaction not available
EM.TransactionRequired=This operation requires a transaction yet it is not active
EM.IsClosed=EntityManager is already closed!

EM.EntityNotAnEntity=Type ("{0}") is not that of an entity but needs to be for this operation
EM.EntityIsDetached=Entity "{0}" (id="{1}") is detached yet this operation requires it to be attached
EM.EntityIsDeleted=Entity "{0}" (id="{1}") is already deleted
EM.ContainerManagedClose=EntityManager is managed by a container (JEE) and so cannot be closed by calling the EM.close() method. Please read JPA2 spec 3.1.1 for the close() method.
EM.EntityIsNotManaged=Entity "{0}" isnt managed and so you cant use this method
EM.EntityNotInDatastore=Entity "{0}" doesnt exist in the datastore
EM.EntityIsPersistent=Entity "{0}" is already persistent!

#
# Query
#
Query.NamedQueryNotFound=Query with name "{0}" was not found!
Query.NamedStoredProcedureQueryNotFound=Stored Procedure Query with name "{0}" was not found!
Query.ResultSetMappingNotFound=ResultSet mapping with name "{0}" was not found!
Query.ResultClassNotFound=Query with name "{0}" is defined with a result-class "{1}" but this is not found!
Query.LanguageNotSupportedByStore=Query language "{0}" is not supported by the datastore

Query.StartPositionInvalid=The start position should be positive (>= 0)
Query.MaxResultsInvalid=The maximum number of results should be positive (>= 0)
Query.ExecuteUpdateForSelectInvalid=You cannot invoke executeUpdate() when the Query is a SELECT
Query.GetResultForUpdateInvalid=You cannot invoke getResultList/getSingleResult when the Query is an UPDATE/DELETE
